name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release

  # maya 2020 - vs 2017, gcc 6.3.1 (toolset 6.1), xcode 10.2.1
  # maya 2022 - vs 2019, gcc 9.3.1 (toolset 9), xcode 10.2.1
  # maya 2023 - vs 2019, gcc 9.3.1 (toolset 9.1), xcode 10.2.1

jobs:
  maya-win:
    runs-on: windows-2019

    strategy:
      # Without this, all containers stop if any fail
      # That's bad, we want to know whether it's only one
      # or if it happens to multiples or all.
      fail-fast: false

      matrix:
       include:
         - maya: "2020"
           devkit: "https://autodesk-adn-transfer.s3-us-west-2.amazonaws.com/ADN+Extranet/M%26E/Maya/devkit+2020/Autodesk_Maya_2020_4_Update_DEVKIT_Windows.zip"
         - maya: "2022"
           devkit: "https://autodesk-adn-transfer.s3.us-west-2.amazonaws.com/ADN%20Extranet/M%26E/Maya/devkit%202022/Autodesk_Maya_2022_DEVKIT_Windows.zip"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install devkit
        run: |
          Write-Host "Downloading Devkit: ${{matrix.devkit}}..."
          Invoke-WebRequest -Uri ${{matrix.devkit}} -OutFile "$pwd/devkit.zip"
          Write-Host "Extracting devkit.zip.."
          Expand-Archive -LiteralPath devkit.zip -DestinationPath $pwd

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DMAYA_VERSION=${{matrix.maya}} -DMAYA_DEVKIT_ROOT="$pwd/devkitBase"

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-${{matrix.maya}}
          path: build/${{env.BUILD_TYPE}}/cmdc.pyd

  maya-macos:
    runs-on: macos-10.15

    strategy:
      fail-fast: false

      matrix:
       include:
         - maya: "2020"
           devkit: "https://autodesk-adn-transfer.s3-us-west-2.amazonaws.com/ADN+Extranet/M%26E/Maya/devkit+2020/Autodesk_Maya_2020_4_Update_DEVKIT_Mac.dmg"
         - maya: "2022"
           devkit: "https://autodesk-adn-transfer.s3-us-west-2.amazonaws.com/ADN+Extranet/M%26E/Maya/devkit+2022/Autodesk_Maya_2022_3_Update_DEVKIT_Mac.dmg"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install devkit
        run: |
          curl -o devkit.dmg ${{matrix.devkit}}
          7z x devkit.dmg

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '10.3'

      - name: Configure CMake
        run: |
          cmake -G Xcode -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DMAYA_VERSION=${{matrix.maya}} -DMAYA_DEVKIT_ROOT="$PWD/devkitBase"

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-${{matrix.maya}}
          path: build/${{env.BUILD_TYPE}}/cmdc.so

  maya-linux:
    runs-on: ubuntu-latest
    container: scottenglert/maya-build:2020

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Configure CMake
        run: |
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DMAYA_VERSION=2020 -DMAYA_DEVKIT_ROOT="/usr/autodesk/devkitBase"

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-2020
          path: build/cmdc.so

    # strategy:
    #   fail-fast: false

    

  # build-linux:
  #   # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
  #   # You can convert this to a matrix build if you need cross-platform coverage.
  #   # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v3

  #   - name: Configure CMake
  #     # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
  #     # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
  #     run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

  #   - name: Build
  #     # Build your program with the given configuration
  #     run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  #   - name: Test
  #     working-directory: ${{github.workspace}}/build
  #     # Execute tests defined by the CMake configuration.  
  #     # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
  #     run: ctest -C ${{env.BUILD_TYPE}}
      
